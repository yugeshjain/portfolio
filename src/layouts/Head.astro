---
import type { ImageMetadata } from "astro";
import { getImage } from "astro:assets";
import { ViewTransitions } from "astro:transitions";

export interface MetaData {
  title: string;
  pageUrl: string;
  description?: string;
  imageUrl?: ImageMetadata;
  publishDate?: Date;
  author?: string;
  contentType?: "article" | "website";
}

interface Props {
  metaData: MetaData;
}

const { metaData: meta } = Astro.props;

const image = await getImage({
  src: meta.imageUrl,
  format: "png",
  width: 1200,
  height: 630,
});
---

<head>
  <meta charset="UTF-8" />
  <link rel="sitemap" href="/sitemap-index.xml" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/x-icon" href="/favicon.ico" />
  <title>{meta.title}</title>
  <meta name="generator" content={Astro.generator} />
  <!-- Open Graph -->
  <meta content={meta.title} property="og:title" />
  <meta content={meta.pageUrl} property="og:url" />
  <meta property="og:type" content={meta.contentType || "website"} />
  {meta.imageUrl && <meta content={image.src} property="og:image" />}
  {
    meta.description && (
      <meta
        content={meta.description}
        name="og:description"
        property="og:description"
      />
    )
  }
  {
    meta.publishDate && (
      <meta
        name="publish_date"
        property="og:publish_date"
        content={meta.publishDate.toISOString()}
      />
    )
  }
  {
    meta.author && (
      <>
        <meta
          name="author"
          property="og:article:author"
          content={meta.author}
        />
      </>
    )
  }

  <!-- Twitter -->
  <meta content={meta.title} name="twitter:title" />
  <meta content="@yugeshjain" name="twitter:creator" />
  <meta content="summary_large_image" name="twitter:card" />
  {meta.imageUrl && <meta content={image.src} name="twitter:image" />}
  {
    meta.description && (
      <meta content={meta.description} name="twitter:description" />
    )
  }

  <ViewTransitions />
</head>
